# day21

내부클래스(Inner Class)
==>클래스안에 다시  클래스를 만드는 경우.

종류 ]
	1. Top Level inner Class
		==> 형식은 내부 클래스 형식을 가지지만
			독립적으로 활동하는 클래스
			
		형식 ]
			접근지정자 static class 클래스이름 {
			}
			==> 내부에서 만들면서 static속성이 붙으면 Top Level 이된다.
			
		참고 ] 
			클래스이름
			일반 클래스와는 달리 내부 클래스의 이름은
			
				바깥클래스이름.내부클래스이름
			의 형식.
			
	***		
	2. 전역 Inner Class
	==> 일반 클래스를 내부 클래스로 생성.
		이 클래스를 일반적으로 '내부클래스'라고 한다.
		
		형식 ]
			접근지정자 class 클래스이름{
			}
		
		특징 ]
			1. 바깥클래스의 모든 멤버를 사용가능.
			2. 반드시 바깥클래스를 new시킨 이후에 내부클래스를 생성가능
			
			형식 ] 
				바깥클래스주소.new 내부클래스이름();
			
			3. 바깥클래스는 내부클래스의 멤버를 사용할 수 없고
				내부클래스를 new시켜서 사용해야함.	
				
		주로 바깥클래스와 연관된 기능을 가진 클래스를 만들고 싶을 때 사용.
		
	3. 지역 Inner Class
	==> 내부클래스를 만드는 위치가 바깥클래스의 함수 내에서 만들경우 "지역내부클래스"라고한다.
	
		class Test{
			int a;
			class In01{ 
				이건 전역내부클래스
			}
			void abc(){
				int num = 10;
				
				class LocalIn{
					이건 지역내부클래스
				}
				void aaa(){
					LocalIn li1 = new LocalIn();
				}
			}		
		}
		
		특징 ] 
			1. 바깥클래스의 멤버를 사용가능
			2. 이 클래스는 다른 곳에서 new시켜서 사용불가능
				만들어진 함수 내에서만 new시킬 수 있음.
				
	*****
	4. 무명 Inner Class
	==> 이름이 없는 내부클래스.
		
		클래스의 기능을 수정하기 위해서 (||어쩔 수 없이 / 인터페이스, 추상클래스를 상속받는 경우)
		Override해야하는 경우에 클래스를 상속받는 순간 new 시키고 필요한 기능을 Override해서 사용.
		
		형식 ]
			new 상속해줄클래스이름(){
				@Override...
			}
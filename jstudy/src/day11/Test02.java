package day11;

public class Test02 {
/*
	얕은 복사의 특징 ]
		Heap 영역에 있는 데이터는 프로그램이 종료될 때 까지는 살아남는다.
 */
	public Test02() {
		// 배열 주소를 기억할 변수
		int[] a;
		
		{
			// 윗 행의 { 기호는 새로운 블럭(영역)을 표시하는 기호
			int[] b; // b 는 이 블럭에서만 작동하는 지역변수가 된다. 
					// 따라서 {} 을 벗어나는 순간 사라지는 변수가 된다.
			b = new int[5];
			/*
				==> Heap 영역에 정수 다섯개를 기억할 배열을 만들게된다.
					이 블럭이 종료가 되면 만들어진 배열 자체는 heap 영역에 남아있고
					변수 b 사라지게 된다.
			 */
			b[2] = 100;
			
			// 얕은 복사를 시도한다.
			a = b;
		}
		
		// 이 행을 실행하면 위의 블럭은 실행이 종료가 됬고 변수 b 는 사라진 상태가 된다.
		// <== 블럭({}) 안에서 만든 변수는 블럭의 실행이 종료되면 사라지기 때문에...
		System.out.println("a[2] : " + a[2]);
		/*
			heap 영역에 만들어진 배열은 블럭이 종료가 되도 사라지지 않고
			대신 주소를 a가 기억하고 있으므로
			a가 기억한 주소를 통해서 배열에 접근할 수 있게 된다.
		 */	
	}

	public static void main(String[] args) {
		new Test02();
	}

}